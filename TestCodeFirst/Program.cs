using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Data.Entity;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using TestCodeFirst.DataContext;

namespace TestCodeFirst
{
    class Program
    {
        static void Main(string[] args)
        {
            using (CodeFirstContext cf = new CodeFirstContext())
            {

                cf.ДневнаяНормаНаУстановкуSet.Load();
                cf.УстановкаSet.Load();

                var days = cf.ДневнаяНормаНаУстановкуSet.Local;
                var devs = cf.УстановкаSet.Local;

                var res = days
                    .Join(devs,
                        a => a.ТехнологическаяУстановка.УстройствоId,
                        b => b.УстройствоId,
                        (a, b) => new { aa = a.Норма, bb = b.Марка });
                string sql = cf.ДневнаяНормаНаУстановкуSet.Sql;
                ;

                ////Добавление ресурсов
                //List<СправочникРесурсов> listRes = new List<СправочникРесурсов>()
                //{
                //    new СправочникРесурсов("Газ"),
                //    new СправочникРесурсов("Электричество"),
                //    new СправочникРесурсов("Уголь")
                //};
                //cf.СправочникРесурсовSet.AddRange(listRes);

                ////Добавление установки
                //ТехнологическаяУстановка dev1 = new ТехнологическаяУстановка("Sim", "XS2", "Tank", DateTime.Parse("2017-01-06"));
                //dev1.СиловойАгрегатВУстройстве.Add
                //    (
                //        new СиловойАгрегатВУстановке()
                //        {
                //            Наименование = "Газовый аппарат",
                //            РежимРаботыАгрегата = new ObservableCollection<РежимРаботыАгрегата>()
                //            {
                //                new РежимРаботыАгрегата(4.3m, РежимРаботы.Срединий)
                //            }
                //        }
                //    );
                //dev1.СиловойАгрегатВУстройстве.Add
                //    (
                //        new СиловойАгрегатВУстановке()
                //        {                            
                //            Наименование = "Электромотор",
                //            РежимРаботыАгрегата = new ObservableCollection<РежимРаботыАгрегата>()
                //            {
                //                new РежимРаботыАгрегата(3.1m, РежимРаботы.Срединий)
                //            }
                //        }
                //    );

                //// Установка режимов работы для установки.
                //dev1.РежимыРаботыУстановки.Add
                //    (
                //        new РежимРаботыУстановки(РежимРаботы.Срединий, 600)
                //    );

                //List<УстановкаРежимРесурс> many = new List<УстановкаРежимРесурс>()
                //{
                //    //Газовый аппарат, газ
                //    new УстановкаРежимРесурс(1, 1),
                //    //Электромотор, электричество
                //    new УстановкаРежимРесурс(2, 2)
                //};
                

                //ПланНормативныйТехнологический plan = new ПланНормативныйТехнологический(
                //    "Новый план", DateTime.Now, DateTime.Now.AddHours(10));

                //cf.УстройствоSet.Load();
                //var dev = cf.УстройствоSet.Local.Where(w => w.УстройствоId == 2).FirstOrDefault();
                //ВыбранноеСостояниеУстройства выбранноеСостояниеУстройства = new ВыбранноеСостояниеУстройства();
                //выбранноеСостояниеУстройства.УстройствоFK = dev;
                //выбранноеСостояниеУстройства.НаименованиеСостояния = "Новое - рабочее состояние после ошибки";
                //выбранноеСостояниеУстройства.РежимРаботы = РежимРаботы.Срединий;
                //выбранноеСостояниеУстройства.ТипЭнергии = ТипЭнергии.Электричество;
                //cf.ВыбранноеСостояниеУстройстваSet.Add(выбранноеСостояниеУстройства);
                //cf.СправочникSet.Load();

                //var plan = cf.СправочникSet.Local.Where(w => w.Id == 17).FirstOrDefault();

                //ВыбранноеСостояниеУстройства выбранноеСостояниеУстройства = new ВыбранноеСостояниеУстройства();
                //выбранноеСостояниеУстройства.СправочникId = (ПланНормативныйТехнологический)plan;
                //выбранноеСостояниеУстройства.ТехнологическоеУстройство = (ТехнологическоеУстройство)dev;

                //cf.ВыбранноеСостояниеУстройстваSet.Add(выбранноеСостояниеУстройства);
                //cf.SaveChanges();

                #region old
                //ТехнологическоеУстройство агрегат =
                //    new ТехнологическоеУстройство
                //        ("Mod A", "Rtt", "Транспортироввочная лента", DateTime.Now.AddYears(-5));

                //агрегат.СиловойАгрегатВУстройстве.Add
                //    (
                //        new СиловойАгрегатВУстройстве("Электромотор", ТипЭнергии.Электричество)

                //    );

                //агрегат.СиловойАгрегатВУстройстве[0]
                //    .РежимРаботыАгрегата
                //    .AddRange
                //    (
                //        new List<РежимРаботыСиловогоАгрегата>()
                //        {
                //            new РежимРаботыСиловогоАгрегата(6.999m, 500m, РежимРаботы.Срединий),
                //            new РежимРаботыСиловогоАгрегата(4.001m, 600m, РежимРаботы.НижеСреднего),
                //            new РежимРаботыСиловогоАгрегата(7.458m, 800m, РежимРаботы.ВышеСреднего)
                //        }
                //    );


                //cf.УстройствоSet.Add(агрегат);
                //cf.SaveChanges();
                #endregion

            }
        }
    }
}
